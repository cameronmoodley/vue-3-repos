v-cloak = can use this directive to show when a site is loaded, when variables are loaded this value will be removed from the element.
v-html = this allows you to dangerously set html in the dom use carefully. cross site scripting
event modifiers event.prevent this is one.
@keyup.enter will trigger when you press the enter button
@click.ctrl will only trigger event when you have shift held in.
v-model.number will parse a string to a number
v-model.lazy.trim = will remove whitespace from a string / click off and will get the value form a text box


v-model
============================================================
Binds data value to form element

computed
============================================================
It always calculates somethings.
Math to concatenating strings.
Propertries which are calculated in some sort of manner.
Methods are more expensive than computed properties.
When a data value is changed, the dom will be redrawn and all methods will be called again.
computed cant have parenthesis in the template.
Vue caches values of computed props.
If a function is not bound to an event use a computed.
computed will only run if one of its properties have been changed.
This is better for performance
Methods should only run with an event
Must always return something


Watchers
============================================================
Watchers data for changes. When data changes you can run a functions.
Not used very often.
It is like the component did update method.
Dont stress too much about using them.

vue fragments
===========================================================
instead of fragment you just change everything to template.
<template></template>


v-show
============================================================
v-show accepts a boolean and then shows or hides the content.
Vue applies a css class as opposed to removing it from the dom.
doesnt work on the vue fragment
Its cheap when after you have loaded it.
if Element is toggled frequently then you use the v show.


v-for
===========================================================
people = [{'name': 'cameron', age: 20},{'name': 'justine', age: 20},]

<div v-for="person in people">
	<div v-for="(value, key, index) in person">
		{{ key }}: {{value}} - {{index}}
	</div>
</div>
Loop inside a loop not very happy about this but it flattens an array.










































